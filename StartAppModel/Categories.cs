//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StartAppModel
{
    using Newtonsoft.Json;
    using System;
    using System.Collections.Generic;

    public partial class Categories
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Categories()
        {
            this.PlaceCategories = new HashSet<PlaceCategories>();
            this.UserSelectedCategories = new HashSet<UserSelectedCategories>();
            this.CategoryProperties = new HashSet<CategoryProperties>();
        }

        public int Id { get; set; }
        public int MainCategoryId { get; set; }
        public string Name { get; set; }
        public string IconUrl { get; set; }
        public int OrderNo { get; set; }
        public bool IsActive { get; set; }

        public bool tempSelect
        {
            get { return false; }
            set { }
        }


        public virtual MainCategories MainCategories { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        [JsonIgnore]
        public virtual ICollection<PlaceCategories> PlaceCategories { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        [JsonIgnore]
        public virtual ICollection<UserSelectedCategories> UserSelectedCategories { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        [JsonIgnore]
        public virtual ICollection<CategoryProperties> CategoryProperties { get; set; }
    }
}
